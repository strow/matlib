function make_kml(lat,lon,data,filename,marker_size)
% function make_kml(lat,lon,data,filename,marker_size)
%
% Create a kml file with the data points for a given dataset.  Usage is similar to the 
%  use of the scatter() function found in matlab.  
%
% INPUTS:
%  lat         - latitude
%  lon         - longitude
%  data        - raw data
%  filename    - output file name
%  marker_size - google marker size (default: 0.3)

% Written by Paul Schou, March 2013

if ~isequal(size(lat),size(lon))
  error('Latitude and Longitude are different dimensions')
end

if ~isequal(size(lat),size(data))
  error('Geodata and input data field are different dimensions')
end

if nargin < 5
  marker_size = 0.3;
end

fid = fopen(filename,'w');
fwrite(fid, [...
  '<?xml version="1.0" encoding="UTF-8"?>' 10 ...
  '<kml xmlns="http://earth.google.com/kml/2.2">' 10 ...
  '<Document>' 10 ...
  '	<name>data</name>' 10]);

scatter(lon,lat,5,data);
cm = colormap;
if numel(cm)
  % if no colormap is found, let's try using a default colormap
  cm = jet(255);
  ca = caxis;
  if ca(1) == ca(2)
    ca = [min(data(:)) max(data(:))];
  end
end


for i = 1:size(cm,1)
  fwrite(fid, [...
    '	<StyleMap id="msn' num2str(i) '">' 10 ...
    '		<Pair>' 10 ...
    '			<key>normal</key>' 10 ...
    '			<styleUrl>#sn' num2str(i) '</styleUrl>' 10 ...
    '		</Pair>' 10 ...
    '		<Pair>' 10 ...
    '			<key>highlight</key>' 10 ...
    '			<styleUrl>#sn' num2str(i) '</styleUrl>' 10 ...
    '		</Pair>' 10 ...
    '	</StyleMap>' 10 ...
    '	<Style id="sn' num2str(i) '">' 10 ...
    '		<IconStyle>' 10 ...
    '			<color>A0' reshape(dec2hex(round(cm(i,:)*255))',1,[]) '</color>' 10 ...
    '			<scale>' num2str(marker_size) '</scale>' 10 ...
    '			<Icon>' 10 ...
    '				<href>http://maps.google.com/mapfiles/kml/paddle/wht-blank-lv.png</href>' 10 ...
    '			</Icon>' 10 ...
    '		</IconStyle>' 10 ...
    '		<ListStyle>' 10 ...
    '		</ListStyle>' 10 ...
    '	</Style>' 10]);
end

[counts bins] = histc(data(:),linspace(ca(1),ca(2),size(cm,1)));

for i = 1:numel(lat)
  if isnan(data(i)); continue; end
  if bins(i) == 0; continue; end
  fwrite(fid, [...
    '	<Placemark>' 10 ...
    '		<name></name>' 10 ...
    '		<description>data</description>' 10 ...
    '		<styleUrl>#msn' num2str(bins(i)) '</styleUrl>' 10 ...
    '		<Point>' 10 ...
    '			<coordinates>' num2str(lon(i)) ',' num2str(lat(i)) ',0</coordinates>' 10 ...
    '		</Point>' 10 ...
    '	</Placemark>' 10]);
end

fwrite(fid, [...
  '</Document>' 10 ...
  '</kml>']);

fclose(fid);
